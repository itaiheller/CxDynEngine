buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
        springGradleVersion = '1.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springGradleVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

eclipse {
    classpath {
       downloadSources=true
       downloadJavadoc=true
    }
}

version = '0.6.0-SNAPSHOT'
sourceCompatibility = 1.8
description = 'Manages Dynamic Engines for Checkmarx SAST solution'

repositories {
	mavenCentral()
}

dependencies {
    compile(
        'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.boot:spring-boot-starter-aop',
        'org.springframework:spring-web',
        'org.springframework.retry:spring-retry',
        'com.github.ulisesbocchio:jasypt-spring-boot-starter:1.16',
        'com.google.guava:guava',
        'joda-time:joda-time',
        'commons-io:commons-io',
        'com.fasterxml.jackson.datatype:jackson-datatype-joda',
        'com.amazonaws:aws-java-sdk-ec2',
        'org.apache.commons:commons-lang3:3.6',
        //'org.python:jython-standalone:2.7.1',
        'org.codehaus.groovy:groovy-all'
    )
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR3'
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.159'
    }
}

jar {
    manifest {
        attributes("Implementation-Title": "Checkmarx Dynamic Engine Manager",
                   "Implementation-Version": version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task zip(type: Zip) {
    dependsOn bootRepackage
    from 'src/main/resources/dist'
    from jar
    into 'cx-dyn-engines'
}

task dist(type: Copy) {
    dependsOn zip
    from 'build/distributions'
    from 'build/libs'
    into '../archive/'
    include '*-sources.jar'
    include '*.zip'
    rename { String fileName ->
        fileName.replace('.jar', '.zip')
    }
    rename { String fileName ->
        fileName.replace('-SNAPSHOT', '')
    }
}
